// .github/scripts/ai-code-review.js

const { GoogleGenerativeAI } = require('@google/genai');
const github = require('@actions/github');
const fs = require('fs');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
async function run() {
  try {
    // 1. ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å GitHub Actions
    const geminiApiKey = process.env.GEMINI_API_KEY;
    const githubToken = process.env.GITHUB_TOKEN;
    const context = github.context;

    if (!geminiApiKey) {
      throw new Error('Gemini API Key is not set.');
    }

    // 2. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö Gemini ‡πÅ‡∏•‡∏∞ GitHub
    const genAI = new GoogleGenerativeAI(geminiApiKey);
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    const octokit = github.getOctokit(githubToken);

    // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    // ‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå README.md ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô
    const codeToReview = fs.readFileSync('README.md', 'utf8');

    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Prompt ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ AI
    const prompt = `
      Act as: a Senior Software Architect at "UltraMax Devs".
      Analyze this code snippet:
      ---
      ${codeToReview}
      ---
      Your Task: Review this code based on our "Golden Rules".
      1. Design First: Does this code align with our principles?
      2. Stability First: Can you spot any potential issues?
      3. Minimal Code, Maximum Impact: Is this code efficient?
      Output Format: Provide feedback in Markdown format, starting with a summary verdict.
    `;

    // 4. ‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâ Gemini ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
    const result = await model.generateContent(prompt);
    const aiResponse = await result.response.text();

    // 5. ‡∏ô‡∏≥‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ö‡∏ô GitHub
    await octokit.rest.repos.createCommitComment({
      owner: context.repo.owner,
      repo: context.repo.repo,
      commit_sha: context.sha,
      body: `### üîÆ Synapse AI Analysis Complete üîÆ\n\n${aiResponse}`
    });

    console.log('AI review comment posted successfully.');

  } catch (error) {
    console.error('Error during AI code review:', error);
    process.exit(1); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ Action ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
  }
}

run();